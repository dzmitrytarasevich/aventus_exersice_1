# Default values for flask_aventus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
postgresql:
  global:
    postgresql:
      auth:
        username: postgres
        password: postgres
        database: db_exercise_1
  primary:
    initdb:
      scripts:
        init_table.sql: |-
          create table endpoint1 (id SERIAL PRIMARY KEY, name varchar(100));
          insert into endpoint1 (name) values ('endpoint1');
          create table endpoint2 (id SERIAL PRIMARY KEY, name varchar(100));
          insert into endpoint2 (name) values ('endpoint2');


replicaCount: 1

image:
  repository: ghcr.io/dzmitrytarasevich/aventus_exersice_1
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1"

imagePullSecrets:
  name: github-key
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "flask-app"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 5000
  nodeport: 30500

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
#    - host: chart-example.local
  paths:
    - path: /
      pathType: Prefix
      backend:
        service:
          name: flask-app-svc
          port:
            number: 5000
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 250m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
